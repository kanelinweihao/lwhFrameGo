<script>
const urlLogin = '/web/auth/login';
const urlHome = '/web/home';
// const headerKeyJwtToken = 'Jwt-Token';
// isReqToApi
let inputIRTA = document.getElementById('isReqToApi');
console.log(inputIRTA.value);
let isReqToApi = (inputIRTA.value === 'true');
console.log('isReqToApi : ' + String(isReqToApi));
// msgShow
let bMsgShow = document.getElementById('msgShow');
let msgShow = bMsgShow.innerHTML;
let iJsonRes = document.getElementById('jsonRes');
if (msgShow === 'Ready') {
    iJsonRes.style.display = 'none';
    console.log('ready');
}
// submit
let btn = document.getElementById('buttonSubmitReq');
btn.onclick = function (e) {
    e.preventDefault();
    msgShow = 'Executing';
    console.log('executing');
    let paramsFull = getParamsWithSign();
    console.log('jsonReq : ' + toJson(paramsFull));
    if (isReqToApi) {
        submitApi(paramsFull);
    } else {
        submitWeb(paramsFull);
    }
}

function toJson(obj) {
    return JSON.stringify(obj);
}

function toObj(json) {
    return JSON.parse(json);
}

function submitWeb(paramsFull) {
    let urlWeb = getUrlWeb();
    console.log('urlWeb : ' + urlWeb);
    let urlGet = getUrlGet(urlWeb, paramsFull);
    console.log('urlGet : ' +urlGet);
    openUrlGet(urlGet);
}

function submitApi(paramsFull) {
    let urlApi = getUrlApi();
    console.log('urlApi : ' + urlApi);
    let urlGet = getUrlGet(urlApi, paramsFull);
    console.log('urlGet : ' +urlGet);
    ajaxGet(urlGet);
}

function getUrlWeb() {
    return window.location.pathname;
}

function getUrlApi() {
    let urlWeb = getUrlWeb();
    return urlWeb.replace('web', 'api');
}

function getParamsReq(form) {
    let params = {};
    for (let i = 0; i < form.elements.length; i++) {
        let element = form.elements[i];
        let key = element.name;
        let value = element.value;
        if (key.length === 0) {
            continue;
        }
        params[key] = value;
    }
    return params;
}

function getParamsSorted(params) {
    let paramsSorted = {};
    Object.keys(params).sort().forEach((key) => {
        paramsSorted[key] = params[key];
    });
    return paramsSorted;
}

function getParamsWithSign() {
    let form = document.getElementById('formReq');
    let params = getParamsReq(form);
    let paramsSorted = getParamsSorted(params);
    let jsonSign = toJson(paramsSorted);
    params['Sign'] = sm3Digest(jsonSign);
    return params;
}

function getUrlGet(urlApi, params) {
    let query = '';
    for (let key in params) {
        if (query !== '') {
            query += '&';
        }
        query += encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);
    }
    return urlApi + '?' + query;
}

function openUrlGet(urlGet) {
    window.location.href = urlGet;
}

function ajaxGet(urlGet) {
    // 创建XMLHttpRequest对象
    let xhr = new XMLHttpRequest();
    // 设置请求类型、URL和异步标志
    xhr.open(
        'GET',
        urlGet,
        true
    );
    // 设置请求头信息
    xhr.setRequestHeader('Content-Type', 'application/json');
    // let jwtToken = getCookie('jwtToken');
    // if (jwtToken !== '') {
    //     xhr.setRequestHeader(headerKeyJwtToken, jwtToken);
    // }
    // 注册回调函数
    xhr.onreadystatechange = function () {
        if (xhr.readyState !== 4) {
            return;
        }
        if (xhr.status !== 200) {
            let formatError = 'Fail to send data, the urlGet is |{urlGet}|, the networkCode is |{networkCode}|'
            let msgError = formatError.replace('{urlGet}', urlGet).replace('{networkCode}', xhr.status);
            console.error(msgError);
            return;
        }
        console.log('callback');
        handleResp(xhr.responseText);
    };
    // 发送请求
    xhr.send();
}

// function ajaxPost(urlPost, json) {
//     // 创建XMLHttpRequest对象
//     let xhr = new XMLHttpRequest();
//     // 设置请求类型、URL和异步标志
//     xhr.open(
//         'POST',
//         urlPost,
//         true
//     );
//     // 设置请求头信息
//     // xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
//     xhr.setRequestHeader('Content-Type', 'application/json');
//     // 注册回调函数
//     xhr.onreadystatechange = function () {
//         if (xhr.readyState !== 4) {
//             return;
//         }
//         if (xhr.status !== 200) {
//             let formatError = 'Fail to send data, the urlPost is |{urlPost}|, the networkCode is |{networkCode}|'
//             let msgError = formatError.replace('{urlPost}', urlPost).replace('{networkCode}', xhr.status);
//             console.error(msgError);
//             return;
//         }
//         console.log('callback')
//         handleResp(xhr.responseText);
//     };
//     // 发送请求
//     xhr.send(json);
// }

function handleResp(strResp) {
    let jsonResp = strResp;
    iJsonRes.innerHTML = jsonResp;
    console.log('jsonResp : ' + jsonResp);
    let objResp = toObj(jsonResp);
    console.log('objResp : ' + toJson(objResp));
    let data = objResp.Data;
    console.log('data : ' + toJson(data));
    for (let key in data) {
        let input = document.getElementById(key);
        input.value = data[key];
    }
    let jwtToken = data['JwtToken'];
    if (jwtToken !== undefined) {
        console.log('jwtToken : ' + jwtToken);
        let cookieKey = 'jwtToken';
        let cookieValue = jwtToken;
        let strCookie = setCookie(cookieKey, cookieValue);
        console.log('strCookie : ' + strCookie);
        cookieValue = getCookie(cookieKey);
        console.log('jwtTokenFromCookie : ' + cookieValue);
    }
    bMsgShow.innerHTML = 'Success'
    iJsonRes.style.display = 'block';
    console.log('success');
    console.log(window.location.pathname);
    if (window.location.pathname === urlLogin) {
        openHome()
    }
}

function setCookie(cookieKey, cookieValue) {
    let strCookie = cookieKey + '=' + cookieValue + ';';
    strCookie = strCookie + "path=/;";
    let d = new Date();
    d.setTime(d.getTime()+(1000*60*60*24*30*2)); // 2months
    let lineExpires = "expires=" + d.toGMTString();
    strCookie = strCookie + lineExpires;
    document.cookie = strCookie;
    return strCookie
}

function getCookie(cookieKey) {
    let strCookie = document.cookie;
    if (strCookie.length === 0) {
        return ""
    }
    let startLine = strCookie.indexOf(cookieKey + "=");
    if (startLine === -1) {
        return ""
    }
    let startValue = startLine + cookieKey.length + 1;
    let endValue = strCookie.indexOf(";", startValue);
    if (endValue === -1) {
        endValue = strCookie.length;
    }
    return strCookie.substring(startValue, endValue);
}

function openHome() {
    window.location.href = urlHome;
}
</script>
